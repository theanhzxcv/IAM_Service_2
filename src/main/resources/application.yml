info:
  app:
    name: IAM Service App
    description: IAM Service with Spring Boot, PostgresSQL and JWT

server:
  port: 8081

#storage-service:
#  url: http://localhost:8082

keycloak:
  enabled: false
  realm: IAMService
  auth-server-url: http://localhost:8080
#  resource: storage-service-api
  client:
    id: iam-service-api
    secret: lkbRJLrdzVuIr47DQJfBwmiXzbA6hdkJ
  admin:
    username: theanh
    password: theanh

spring:
  datasource:
    url: jdbc:postgresql://127.0.0.1:5432/iam-2
    username: postgres
    password:
    driver-class-name: org.postgresql.Driver
  jpa:
    auditor-aware-ref: auditorAwareImp
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  mail:
    host: sandbox.smtp.mailtrap.io
    port: 2525
    username: cb9b9078d8efbf
    password: 472c361eaa061d
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          timeout: 5000
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 634041233114-cbhbkjk9pnro4pp22oekq3kgltov973n.apps.googleusercontent.com
            client-secret: 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
            scope:
              - openid
              - profile
              - email
            redirect-uri: "http://localhost:8081/login/oauth2/code/google"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
      resource-server:
        jwt:
          issuer-uri: http://localhost:8080/realms/IAMService
          jwk-set-uri: ${spring.security.oauth2.resource-server.jwt.issuer-uri}/protocol/openid-connect/certs

redis:
  host: localhost
  port: 6379